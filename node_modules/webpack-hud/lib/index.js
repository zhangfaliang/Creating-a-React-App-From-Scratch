'use strict';

var _docReady = require('doc-ready');

var _docReady2 = _interopRequireDefault(_docReady);

var _stripAnsi = require('strip-ansi');

var _stripAnsi2 = _interopRequireDefault(_stripAnsi);

var _bottomTip = require('bottom-tip');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tipElement = document.createElement('div'); // This file is forked from Webpack, maybe older version, 1.13.x?
// https://github.com/webpack/webpack-dev-server/blob/v1.14.1/client/live.js

(0, _docReady2.default)(function () {
  document.body.appendChild(tipElement);
});

var timeoutRef = void 0;
function display(hudType, hudMessage) {
  if (hudType === 'ok') {
    (0, _bottomTip.renderTip)(tipElement, 'ok', 'OK');
    timeoutRef = setTimeout(function () {
      (0, _bottomTip.renderTip)(tipElement, 'inactive', '');
    }, 1000);
  } else {
    (0, _bottomTip.renderTip)(tipElement, hudType, hudMessage);
    clearTimeout(timeoutRef);
  }
}

function handleMessage(msg) {
  if (!msg.data || !msg.data.type) {
    return;
  }
  var webpackMsg = msg.data;

  switch (webpackMsg.type) {
    case 'webpackOk':
      display('ok', 'OK');
      break;
    case 'webpackStillOK':
      display('ok', 'StillOk');
      break;
    case 'webpackInvalid':
      // console.log('compiling...');
      break;
    case 'webpackWarnings':
      var warningMsg = webpackMsg.data.map(function (s) {
        return (0, _stripAnsi2.default)(s);
      }).join('\n');
      display('warn', warningMsg);
      break;
    case 'webpackErrors':
      var errorMsg = webpackMsg.data.map(function (s) {
        return (0, _stripAnsi2.default)(s);
      }).join('\n');
      display('warn', errorMsg);
      break;
    case 'webpackClose':
      display('warn', 'Invalid');
      break;
    default:
      console.warn('Unrecognized message:', webpackMsg);
  }
};

window.addEventListener('message', handleMessage, false);